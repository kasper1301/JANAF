#!/usr/bin/python

def extractHeatCapacity(txtFolder="txt/", cpFolder="heatCapacity/"):
    '''
    A function that converts downloaded JANAF tables from text to CSV.
    The function extracts the temperatures and the heat capacities and writes
    them to a componentname.csv file. The reference entropy and enthalpy is also
    extracted and written to componentname_ref.csv. Only SI units with no prefix
    are used.
    Input:
        [txtFolder]:    The folder that contains the text files.
                        Defaults to "txt/"
        [cpFolder]:     The folder for the heat capacity output.
                        Defaults to "heatCapacity/"
    '''
    from site import os
    import extractAllData
    txtFiles    = os.listdir(txtFolder)       # Get all the text files as a list
    
    for txtFile in txtFiles:                   # Loop through all the text files
        txt     = open(txtFolder + txtFile, 'r')                     # Open text
        header  = txt.readline()                           # Read the first line
        name    = ""                                      # Initialize file name
        
        for symbol in header:                          # Loop through the header
            if symbol.isalnum() or symbol in '-,()':      # Alphanumeric or -,()
                name += symbol                              # Add symbol to name
            elif symbol.isspace():                                  # Whitespace
                name += '_'                             # Add underscore to name
        name = name.rstrip('_')                      # Strip trailing underscore
        print 'Component: ' + name                                  # Print name
        
        csv = open(cpFolder + name + '.csv', 'w')                   # Create csv
        csv.write('T[K],Cp[J K^{-1} mol^{-1}]\n')                 # Write header
        
        lines   = txt.readlines()[2:]    # Read all the lines (skip 2nd and 3rd)
        
        for line in lines:                              # Loop through the lines
            try:
                data            = line.split()              # Split into columns
                temperature     = data[0]                  # Extract temperature
                heatCapacity    = data[1]                # Extract heat capacity
                csv.write(temperature + ',' +                    # Write to file
                          heatCapacity + '\n')  
                if temperature == '298.15':               # Get reference values
                    refEnthalpy = data[5]      # Reference enthalpy of formation
                    refEntropy  = data[2]                    # Reference entropy
            except IndexError:                # Catch index error and do nothing
                pass
        csv.close()                                             # Close the file
        csv = open("data/ref/" + name + '.csv', 'w') # File for reference values
        csv.write('Tref[K],Sref[J K^{-1} mol^{-1}],' +            # Write header
                  'Href[J mol^{-1}]\n')
        csv.write('298.15,' + refEntropy +              # Write reference values
                  ',' + str(float(refEnthalpy)*1000) + '\n')
        csv.close()                                             # Close the file
        txt.seek(0)                          # Jump to the beginning of the file
        refValues = {'h': float(refEnthalpy)*1000}            # Reference values
        extractAllData.extractAll(lines, name, refValues) # Extract all the data
        txt.close()                                             # Close txt file

if __name__=='__main__':
    extractHeatCapacity()
